@model Bdl.BoletoBdl.Application.ViewModels.MembroViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Membro</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Informações Pessoais</h4>
        <hr />
        @Html.Partial("_ErrorSummary")
        @Html.HiddenFor(model => model.MembroId)

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apelido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apelido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Apelido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoSanguineo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TipoSanguineo, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.TipoSanguineo, new SelectList(
                                    new List<Object>{
                                        new { value = "A+" , text = "A+"  },
                                        new { value = "A-" , text = "A-" },
                                        new { value = "B+" , text = "B+" },
                                        new { value = "B-" , text = "B-" },
                                        new { value = "AB+" , text = "AB+" },
                                        new { value = "AB-" , text = "AB-" },
                                        new { value = "O+" , text = "O+" },
                                        new { value = "O-" , text = "O-" }
                                    },
                                    "value",
                                    "text"), new { @class = "form-control", id = "TipoSanguineo" })
                @Html.ValidationMessageFor(model => model.TipoSanguineo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Naturalidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Naturalidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Naturalidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.EstadoCivil, new SelectList(
                                    new List<Object>{
                                        new { value = "Solteiro" , text = "Solteiro"  },
                                        new { value = "Casado" , text = "Casado" },
                                        new { value = "Divorciado" , text = "Divorciado" },
                                        new { value = "Viúvo" , text = "Viúvo" }
                                    },
                                    "value",
                                    "text"), new { @class = "form-control", id = "EstadoCivil" })
                @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AtividadeProfissional, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AtividadeProfissional, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AtividadeProfissional, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <h4>Filiação</h4>


        <div class="form-group">
            @Html.LabelFor(model => model.Pai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mae, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mae, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mae, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <h4>Documentos</h4>


        <div class="form-group">
            @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CNH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoriaCNH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoriaCNH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoriaCNH, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <h4>Informações do Clube</h4>


        <div class="form-group">
            @Html.LabelFor(model => model.Padrinho, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Padrinho, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Padrinho, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GraduacaoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GraduacaoId", (IEnumerable<SelectListItem>)ViewBag.GraduacaoId, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GraduacaoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataAdmissao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataAdmissao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataAdmissao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Atualiazar" class="btn btn-success" />
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<div id="myModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContent"></div>
        </div>
    </div>
</div>

<div id="myModalContato" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContentContato"></div>
        </div>
    </div>
</div>

<hr />
<div id="replacetargetEndereco">
    @Html.Partial("_EnderecoList", Model.EnderecoList)
</div>
<hr />
<div id="replacetargetContato">
    @Html.Partial("_ContatoList", Model.ContatoList)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
